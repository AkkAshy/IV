# Generated by Django 5.2 on 2025-06-07 10:43

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("inventory", "0010_disposal_original_room_repair_original_room"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterUniqueTogether(
            name="computerspecification",
            unique_together=set(),
        ),
        migrations.RemoveField(
            model_name="computerdetails",
            name="storage",
        ),
        migrations.RemoveField(
            model_name="monoblokchar",
            name="storage",
        ),
        migrations.RemoveField(
            model_name="monoblokspecification",
            name="storage",
        ),
        migrations.RemoveField(
            model_name="notebookchar",
            name="storage",
        ),
        migrations.RemoveField(
            model_name="notebookspecification",
            name="storage",
        ),
        migrations.CreateModel(
            name="Disk",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "disk_type",
                    models.CharField(
                        choices=[("HDD", "HDD"), ("SSD", "SSD"), ("NVME", "NVMe")],
                        max_length=10,
                        verbose_name="Тип диска",
                    ),
                ),
                ("capacity_gb", models.PositiveIntegerField(verbose_name="Объем (ГБ)")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "author",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_disks",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Автор",
                    ),
                ),
                (
                    "equipment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="disks",
                        to="inventory.equipment",
                        verbose_name="Оборудование",
                    ),
                ),
            ],
            options={
                "verbose_name": "Диск",
                "verbose_name_plural": "Диски",
            },
        ),
        migrations.CreateModel(
            name="DiskSpecification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "disk_type",
                    models.CharField(
                        choices=[("HDD", "HDD"), ("SSD", "SSD"), ("NVME", "NVMe")],
                        max_length=10,
                        verbose_name="Тип диска",
                    ),
                ),
                ("capacity_gb", models.PositiveIntegerField(verbose_name="Объем (ГБ)")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "author",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_disk_specifications",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Автор",
                    ),
                ),
                (
                    "computer_specification",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="disk_specifications",
                        to="inventory.computerspecification",
                    ),
                ),
                (
                    "monoblok_specification",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="disk_specifications",
                        to="inventory.monoblokspecification",
                    ),
                ),
                (
                    "notebook_specification",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="disk_specifications",
                        to="inventory.notebookspecification",
                    ),
                ),
            ],
            options={
                "verbose_name": "Спецификация диска",
                "verbose_name_plural": "Спецификации дисков",
            },
        ),
        migrations.AddField(
            model_name="computerspecification",
            name="disks",
            field=models.ManyToManyField(
                blank=True, to="inventory.diskspecification", verbose_name="Накопители"
            ),
        ),
        migrations.AddField(
            model_name="monoblokspecification",
            name="disks",
            field=models.ManyToManyField(
                blank=True, to="inventory.diskspecification", verbose_name="Накопители"
            ),
        ),
        migrations.AddField(
            model_name="notebookspecification",
            name="disks",
            field=models.ManyToManyField(
                blank=True, to="inventory.diskspecification", verbose_name="Накопители"
            ),
        ),
        migrations.RemoveField(
            model_name="computerspecification",
            name="storage",
        ),
    ]
